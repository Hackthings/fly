// automatically generated by the FlatBuffers compiler, do not modify
import { flatbuffers } from 'flatbuffers'

/**
 * @enum
 */
export namespace fly {
  export enum Any {
    NONE = 0,
    Start = 1,
    StartRes = 2,
    CodeFetch = 3,
    CodeFetchRes = 4,
    CodeCache = 5,
    Exit = 6,
    TimerStart = 7,
    TimerReady = 8,
    TimerClear = 9,
    Environ = 10,
    EnvironRes = 11,
    FetchReq = 12,
    FetchRes = 13,
    MakeTempDir = 14,
    MakeTempDirRes = 15,
    MkdirSync = 16,
    ReadFileSync = 17,
    ReadFileSyncRes = 18,
    StatSync = 19,
    StatSyncRes = 20,
    SetEnv = 21,
    WriteFileSync = 22
  }
};

/**
 * @enum
 */
export namespace fly {
  export enum ErrorKind {
    NoError = 0,
    NotFound = 1,
    PermissionDenied = 2,
    ConnectionRefused = 3,
    ConnectionReset = 4,
    ConnectionAborted = 5,
    NotConnected = 6,
    AddrInUse = 7,
    AddrNotAvailable = 8,
    BrokenPipe = 9,
    AlreadyExists = 10,
    WouldBlock = 11,
    InvalidInput = 12,
    InvalidData = 13,
    TimedOut = 14,
    Interrupted = 15,
    WriteZero = 16,
    Other = 17,
    UnexpectedEof = 18,
    EmptyHost = 19,
    IdnaError = 20,
    InvalidPort = 21,
    InvalidIpv4Address = 22,
    InvalidIpv6Address = 23,
    InvalidDomainCharacter = 24,
    RelativeUrlWithoutBase = 25,
    RelativeUrlWithCannotBeABaseBase = 26,
    SetHostOnCannotBeABaseUrl = 27,
    Overflow = 28,
    HttpUser = 29,
    HttpClosed = 30,
    HttpCanceled = 31,
    HttpParse = 32,
    HttpOther = 33
  }
};

/**
 * @constructor
 */
export namespace fly {
  export class Base {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Base
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Base {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Base= obj
     * @returns Base
     */
    static getRootAsBase(bb: flatbuffers.ByteBuffer, obj?: Base): Base {
      return (obj || new Base).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    cmdId(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_cmd_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns fly.ErrorKind
     */
    errorKind(): fly.ErrorKind {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : fly.ErrorKind.NoError;
    };

    /**
     * @param fly.ErrorKind value
     * @returns boolean
     */
    mutate_error_kind(value: fly.ErrorKind): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    error(): string | null
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    error(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @returns fly.Any
     */
    msgType(): fly.Any {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : fly.Any.NONE;
    };

    /**
     * @param fly.Any value
     * @returns boolean
     */
    mutate_msg_type(value: fly.Any): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 10);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint8(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Table obj
     * @returns ?flatbuffers.Table
     */
    msg<T extends flatbuffers.Table>(obj: T): T | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startBase(builder: flatbuffers.Builder) {
      builder.startObject(5);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number cmdId
     */
    static addCmdId(builder: flatbuffers.Builder, cmdId: number) {
      builder.addFieldInt32(0, cmdId, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param fly.ErrorKind errorKind
     */
    static addErrorKind(builder: flatbuffers.Builder, errorKind: fly.ErrorKind) {
      builder.addFieldInt8(1, errorKind, fly.ErrorKind.NoError);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset errorOffset
     */
    static addError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, errorOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param fly.Any msgType
     */
    static addMsgType(builder: flatbuffers.Builder, msgType: fly.Any) {
      builder.addFieldInt8(3, msgType, fly.Any.NONE);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset msgOffset
     */
    static addMsg(builder: flatbuffers.Builder, msgOffset: flatbuffers.Offset) {
      builder.addFieldOffset(4, msgOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endBase(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset offset
     */
    static finishBaseBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
      builder.finish(offset);
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class Start {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Start
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Start {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Start= obj
     * @returns Start
     */
    static getRootAsStart(bb: flatbuffers.ByteBuffer, obj?: Start): Start {
      return (obj || new Start).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    unused(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_unused(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startStart(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number unused
     */
    static addUnused(builder: flatbuffers.Builder, unused: number) {
      builder.addFieldInt8(0, unused, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endStart(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class StartRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns StartRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): StartRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param StartRes= obj
     * @returns StartRes
     */
    static getRootAsStartRes(bb: flatbuffers.ByteBuffer, obj?: StartRes): StartRes {
      return (obj || new StartRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    cwd(): string | null
    cwd(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    cwd(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param number index
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array
     */
    argv(index: number): string
    argv(index: number, optionalEncoding: flatbuffers.Encoding): string | Uint8Array
    argv(index: number, optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
    };

    /**
     * @returns number
     */
    argvLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns boolean
     */
    debugFlag(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_debug_flag(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startStartRes(builder: flatbuffers.Builder) {
      builder.startObject(3);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset cwdOffset
     */
    static addCwd(builder: flatbuffers.Builder, cwdOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, cwdOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset argvOffset
     */
    static addArgv(builder: flatbuffers.Builder, argvOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, argvOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<flatbuffers.Offset> data
     * @returns flatbuffers.Offset
     */
    static createArgvVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addOffset(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startArgvVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean debugFlag
     */
    static addDebugFlag(builder: flatbuffers.Builder, debugFlag: boolean) {
      builder.addFieldInt8(2, +debugFlag, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endStartRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class CodeFetch {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns CodeFetch
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): CodeFetch {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param CodeFetch= obj
     * @returns CodeFetch
     */
    static getRootAsCodeFetch(bb: flatbuffers.ByteBuffer, obj?: CodeFetch): CodeFetch {
      return (obj || new CodeFetch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    moduleSpecifier(): string | null
    moduleSpecifier(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    moduleSpecifier(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    containingFile(): string | null
    containingFile(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    containingFile(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startCodeFetch(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset moduleSpecifierOffset
     */
    static addModuleSpecifier(builder: flatbuffers.Builder, moduleSpecifierOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, moduleSpecifierOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset containingFileOffset
     */
    static addContainingFile(builder: flatbuffers.Builder, containingFileOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, containingFileOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endCodeFetch(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class CodeFetchRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns CodeFetchRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): CodeFetchRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param CodeFetchRes= obj
     * @returns CodeFetchRes
     */
    static getRootAsCodeFetchRes(bb: flatbuffers.ByteBuffer, obj?: CodeFetchRes): CodeFetchRes {
      return (obj || new CodeFetchRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    moduleName(): string | null
    moduleName(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    moduleName(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    filename(): string | null
    filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    filename(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    sourceCode(): string | null
    sourceCode(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    sourceCode(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    outputCode(): string | null
    outputCode(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    outputCode(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startCodeFetchRes(builder: flatbuffers.Builder) {
      builder.startObject(4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset moduleNameOffset
     */
    static addModuleName(builder: flatbuffers.Builder, moduleNameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, moduleNameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset filenameOffset
     */
    static addFilename(builder: flatbuffers.Builder, filenameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, filenameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset sourceCodeOffset
     */
    static addSourceCode(builder: flatbuffers.Builder, sourceCodeOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, sourceCodeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset outputCodeOffset
     */
    static addOutputCode(builder: flatbuffers.Builder, outputCodeOffset: flatbuffers.Offset) {
      builder.addFieldOffset(3, outputCodeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endCodeFetchRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class CodeCache {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns CodeCache
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): CodeCache {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param CodeCache= obj
     * @returns CodeCache
     */
    static getRootAsCodeCache(bb: flatbuffers.ByteBuffer, obj?: CodeCache): CodeCache {
      return (obj || new CodeCache).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    filename(): string | null
    filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    filename(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    sourceCode(): string | null
    sourceCode(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    sourceCode(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    outputCode(): string | null
    outputCode(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    outputCode(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startCodeCache(builder: flatbuffers.Builder) {
      builder.startObject(3);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset filenameOffset
     */
    static addFilename(builder: flatbuffers.Builder, filenameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, filenameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset sourceCodeOffset
     */
    static addSourceCode(builder: flatbuffers.Builder, sourceCodeOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, sourceCodeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset outputCodeOffset
     */
    static addOutputCode(builder: flatbuffers.Builder, outputCodeOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, outputCodeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endCodeCache(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class Exit {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Exit
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Exit {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Exit= obj
     * @returns Exit
     */
    static getRootAsExit(bb: flatbuffers.ByteBuffer, obj?: Exit): Exit {
      return (obj || new Exit).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    code(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_code(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startExit(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number code
     */
    static addCode(builder: flatbuffers.Builder, code: number) {
      builder.addFieldInt32(0, code, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endExit(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class TimerStart {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TimerStart
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TimerStart {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TimerStart= obj
     * @returns TimerStart
     */
    static getRootAsTimerStart(bb: flatbuffers.ByteBuffer, obj?: TimerStart): TimerStart {
      return (obj || new TimerStart).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    id(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns boolean
     */
    interval(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_interval(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @returns number
     */
    delay(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_delay(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startTimerStart(builder: flatbuffers.Builder) {
      builder.startObject(3);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number id
     */
    static addId(builder: flatbuffers.Builder, id: number) {
      builder.addFieldInt32(0, id, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean interval
     */
    static addInterval(builder: flatbuffers.Builder, interval: boolean) {
      builder.addFieldInt8(1, +interval, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number delay
     */
    static addDelay(builder: flatbuffers.Builder, delay: number) {
      builder.addFieldInt32(2, delay, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endTimerStart(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class TimerReady {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TimerReady
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TimerReady {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TimerReady= obj
     * @returns TimerReady
     */
    static getRootAsTimerReady(bb: flatbuffers.ByteBuffer, obj?: TimerReady): TimerReady {
      return (obj || new TimerReady).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    id(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns boolean
     */
    done(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_done(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startTimerReady(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number id
     */
    static addId(builder: flatbuffers.Builder, id: number) {
      builder.addFieldInt32(0, id, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean done
     */
    static addDone(builder: flatbuffers.Builder, done: boolean) {
      builder.addFieldInt8(1, +done, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endTimerReady(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class TimerClear {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TimerClear
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TimerClear {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TimerClear= obj
     * @returns TimerClear
     */
    static getRootAsTimerClear(bb: flatbuffers.ByteBuffer, obj?: TimerClear): TimerClear {
      return (obj || new TimerClear).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    id(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startTimerClear(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number id
     */
    static addId(builder: flatbuffers.Builder, id: number) {
      builder.addFieldInt32(0, id, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endTimerClear(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class Environ {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Environ
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Environ {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Environ= obj
     * @returns Environ
     */
    static getRootAsEnviron(bb: flatbuffers.ByteBuffer, obj?: Environ): Environ {
      return (obj || new Environ).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startEnviron(builder: flatbuffers.Builder) {
      builder.startObject(0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEnviron(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class SetEnv {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns SetEnv
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): SetEnv {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param SetEnv= obj
     * @returns SetEnv
     */
    static getRootAsSetEnv(bb: flatbuffers.ByteBuffer, obj?: SetEnv): SetEnv {
      return (obj || new SetEnv).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    key(): string | null
    key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    key(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    value(): string | null
    value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    value(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startSetEnv(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyOffset
     */
    static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, keyOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset valueOffset
     */
    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, valueOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endSetEnv(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class EnvironRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EnvironRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): EnvironRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EnvironRes= obj
     * @returns EnvironRes
     */
    static getRootAsEnvironRes(bb: flatbuffers.ByteBuffer, obj?: EnvironRes): EnvironRes {
      return (obj || new EnvironRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param number index
     * @param fly.EnvPair= obj
     * @returns fly.EnvPair
     */
    map(index: number, obj?: fly.EnvPair): fly.EnvPair | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new fly.EnvPair).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
    };

    /**
     * @returns number
     */
    mapLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startEnvironRes(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset mapOffset
     */
    static addMap(builder: flatbuffers.Builder, mapOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, mapOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<flatbuffers.Offset> data
     * @returns flatbuffers.Offset
     */
    static createMapVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addOffset(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMapVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEnvironRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class EnvPair {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EnvPair
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): EnvPair {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EnvPair= obj
     * @returns EnvPair
     */
    static getRootAsEnvPair(bb: flatbuffers.ByteBuffer, obj?: EnvPair): EnvPair {
      return (obj || new EnvPair).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    key(): string | null
    key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    key(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    value(): string | null
    value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    value(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startEnvPair(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyOffset
     */
    static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, keyOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset valueOffset
     */
    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, valueOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEnvPair(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class FetchReq {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns FetchReq
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): FetchReq {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param FetchReq= obj
     * @returns FetchReq
     */
    static getRootAsFetchReq(bb: flatbuffers.ByteBuffer, obj?: FetchReq): FetchReq {
      return (obj || new FetchReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    id(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    url(): string | null
    url(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    url(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startFetchReq(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number id
     */
    static addId(builder: flatbuffers.Builder, id: number) {
      builder.addFieldInt32(0, id, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset urlOffset
     */
    static addUrl(builder: flatbuffers.Builder, urlOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, urlOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endFetchReq(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class FetchRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns FetchRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): FetchRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param FetchRes= obj
     * @returns FetchRes
     */
    static getRootAsFetchRes(bb: flatbuffers.ByteBuffer, obj?: FetchRes): FetchRes {
      return (obj || new FetchRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    id(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_id(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns number
     */
    status(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_status(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param number index
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array
     */
    headerLine(index: number): string
    headerLine(index: number, optionalEncoding: flatbuffers.Encoding): string | Uint8Array
    headerLine(index: number, optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
    };

    /**
     * @returns number
     */
    headerLineLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param number index
     * @returns number
     */
    body(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
    };

    /**
     * @returns number
     */
    bodyLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint8Array
     */
    bodyArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startFetchRes(builder: flatbuffers.Builder) {
      builder.startObject(4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number id
     */
    static addId(builder: flatbuffers.Builder, id: number) {
      builder.addFieldInt32(0, id, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number status
     */
    static addStatus(builder: flatbuffers.Builder, status: number) {
      builder.addFieldInt32(1, status, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset headerLineOffset
     */
    static addHeaderLine(builder: flatbuffers.Builder, headerLineOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, headerLineOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<flatbuffers.Offset> data
     * @returns flatbuffers.Offset
     */
    static createHeaderLineVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addOffset(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startHeaderLineVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset bodyOffset
     */
    static addBody(builder: flatbuffers.Builder, bodyOffset: flatbuffers.Offset) {
      builder.addFieldOffset(3, bodyOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createBodyVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startBodyVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endFetchRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class MakeTempDir {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns MakeTempDir
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): MakeTempDir {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param MakeTempDir= obj
     * @returns MakeTempDir
     */
    static getRootAsMakeTempDir(bb: flatbuffers.ByteBuffer, obj?: MakeTempDir): MakeTempDir {
      return (obj || new MakeTempDir).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    dir(): string | null
    dir(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    dir(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    prefix(): string | null
    prefix(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    prefix(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    suffix(): string | null
    suffix(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    suffix(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startMakeTempDir(builder: flatbuffers.Builder) {
      builder.startObject(3);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset dirOffset
     */
    static addDir(builder: flatbuffers.Builder, dirOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, dirOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset prefixOffset
     */
    static addPrefix(builder: flatbuffers.Builder, prefixOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, prefixOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset suffixOffset
     */
    static addSuffix(builder: flatbuffers.Builder, suffixOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, suffixOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endMakeTempDir(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class MakeTempDirRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns MakeTempDirRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): MakeTempDirRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param MakeTempDirRes= obj
     * @returns MakeTempDirRes
     */
    static getRootAsMakeTempDirRes(bb: flatbuffers.ByteBuffer, obj?: MakeTempDirRes): MakeTempDirRes {
      return (obj || new MakeTempDirRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    path(): string | null
    path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    path(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startMakeTempDirRes(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset pathOffset
     */
    static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, pathOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endMakeTempDirRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class MkdirSync {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns MkdirSync
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): MkdirSync {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param MkdirSync= obj
     * @returns MkdirSync
     */
    static getRootAsMkdirSync(bb: flatbuffers.ByteBuffer, obj?: MkdirSync): MkdirSync {
      return (obj || new MkdirSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    path(): string | null
    path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    path(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @returns number
     */
    mode(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_mode(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startMkdirSync(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset pathOffset
     */
    static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, pathOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number mode
     */
    static addMode(builder: flatbuffers.Builder, mode: number) {
      builder.addFieldInt32(1, mode, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endMkdirSync(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class ReadFileSync {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns ReadFileSync
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): ReadFileSync {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ReadFileSync= obj
     * @returns ReadFileSync
     */
    static getRootAsReadFileSync(bb: flatbuffers.ByteBuffer, obj?: ReadFileSync): ReadFileSync {
      return (obj || new ReadFileSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    filename(): string | null
    filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    filename(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startReadFileSync(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset filenameOffset
     */
    static addFilename(builder: flatbuffers.Builder, filenameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, filenameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endReadFileSync(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class ReadFileSyncRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns ReadFileSyncRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): ReadFileSyncRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ReadFileSyncRes= obj
     * @returns ReadFileSyncRes
     */
    static getRootAsReadFileSyncRes(bb: flatbuffers.ByteBuffer, obj?: ReadFileSyncRes): ReadFileSyncRes {
      return (obj || new ReadFileSyncRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param number index
     * @returns number
     */
    data(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
    };

    /**
     * @returns number
     */
    dataLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint8Array
     */
    dataArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startReadFileSyncRes(builder: flatbuffers.Builder) {
      builder.startObject(1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset dataOffset
     */
    static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, dataOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createDataVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startDataVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endReadFileSyncRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class StatSync {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns StatSync
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): StatSync {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param StatSync= obj
     * @returns StatSync
     */
    static getRootAsStatSync(bb: flatbuffers.ByteBuffer, obj?: StatSync): StatSync {
      return (obj || new StatSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    filename(): string | null
    filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    filename(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @returns boolean
     */
    lstat(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_lstat(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startStatSync(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset filenameOffset
     */
    static addFilename(builder: flatbuffers.Builder, filenameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, filenameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean lstat
     */
    static addLstat(builder: flatbuffers.Builder, lstat: boolean) {
      builder.addFieldInt8(1, +lstat, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endStatSync(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class StatSyncRes {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns StatSyncRes
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): StatSyncRes {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param StatSyncRes= obj
     * @returns StatSyncRes
     */
    static getRootAsStatSyncRes(bb: flatbuffers.ByteBuffer, obj?: StatSyncRes): StatSyncRes {
      return (obj || new StatSyncRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns boolean
     */
    isFile(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_is_file(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @returns boolean
     */
    isSymlink(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_is_symlink(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    };

    /**
     * @returns flatbuffers.Long
     */
    len(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param flatbuffers.Long value
     * @returns boolean
     */
    mutate_len(value: flatbuffers.Long): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint64(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns flatbuffers.Long
     */
    modified(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param flatbuffers.Long value
     * @returns boolean
     */
    mutate_modified(value: flatbuffers.Long): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 10);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint64(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns flatbuffers.Long
     */
    accessed(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param flatbuffers.Long value
     * @returns boolean
     */
    mutate_accessed(value: flatbuffers.Long): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 12);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint64(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @returns flatbuffers.Long
     */
    created(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param flatbuffers.Long value
     * @returns boolean
     */
    mutate_created(value: flatbuffers.Long): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint64(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startStatSyncRes(builder: flatbuffers.Builder) {
      builder.startObject(6);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isFile
     */
    static addIsFile(builder: flatbuffers.Builder, isFile: boolean) {
      builder.addFieldInt8(0, +isFile, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isSymlink
     */
    static addIsSymlink(builder: flatbuffers.Builder, isSymlink: boolean) {
      builder.addFieldInt8(1, +isSymlink, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long len
     */
    static addLen(builder: flatbuffers.Builder, len: flatbuffers.Long) {
      builder.addFieldInt64(2, len, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long modified
     */
    static addModified(builder: flatbuffers.Builder, modified: flatbuffers.Long) {
      builder.addFieldInt64(3, modified, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long accessed
     */
    static addAccessed(builder: flatbuffers.Builder, accessed: flatbuffers.Long) {
      builder.addFieldInt64(4, accessed, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long created
     */
    static addCreated(builder: flatbuffers.Builder, created: flatbuffers.Long) {
      builder.addFieldInt64(5, created, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endStatSyncRes(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
/**
 * @constructor
 */
export namespace fly {
  export class WriteFileSync {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns WriteFileSync
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): WriteFileSync {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param WriteFileSync= obj
     * @returns WriteFileSync
     */
    static getRootAsWriteFileSync(bb: flatbuffers.ByteBuffer, obj?: WriteFileSync): WriteFileSync {
      return (obj || new WriteFileSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    filename(): string | null
    filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    filename(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param number index
     * @returns number
     */
    data(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
    };

    /**
     * @returns number
     */
    dataLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint8Array
     */
    dataArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @returns number
     */
    perm(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number value
     * @returns boolean
     */
    mutate_perm(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeUint32(this.bb_pos + offset, value);
      return true;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startWriteFileSync(builder: flatbuffers.Builder) {
      builder.startObject(3);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset filenameOffset
     */
    static addFilename(builder: flatbuffers.Builder, filenameOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, filenameOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset dataOffset
     */
    static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
      builder.addFieldOffset(1, dataOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createDataVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startDataVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number perm
     */
    static addPerm(builder: flatbuffers.Builder, perm: number) {
      builder.addFieldInt32(2, perm, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endWriteFileSync(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

  }
}
