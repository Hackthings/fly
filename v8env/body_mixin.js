"use strict";
class BodyMixin {
    constructor(obj) {
        this.bodySource = obj;
        this.stream = null;
    }
    get body() {
        if (this.stream) {
            return this.stream;
        }
        if (this.bodySource instanceof ReadableStream) {
            this.stream = this.bodySource;
        }
        if (!this.stream) {
            throw new Error("Stream not yet implemented");
        }
        return this.stream;
    }
    get bodyUsed() {
        if (this.body && this.body.locked) {
            return true;
        }
        return false;
    }
    async blob() {
        throw new Error("Blob not yet implemented");
    }
    async formData() {
        throw new Error("FormData not yet implemented");
    }
    async text() {
        if (typeof this.bodySource === "string") {
            return this.bodySource;
        }
        throw new Error("not implemented");
    }
    async json() {
        const raw = await this.text();
        return JSON.parse(raw);
    }
    async arrayBuffer() {
        if (this.bodySource instanceof ArrayBuffer) {
            return this.bodySource;
        }
        throw new Error("not yet implemented");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9keV9taXhpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3Y4ZW52LXRzL2JvZHlfbWl4aW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBO0lBSUUsWUFBWSxHQUFlO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFBO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFBO0lBQ3BCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUEsQ0FBQztZQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFBO1FBQ3BCLENBQUM7UUFDRCxFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsVUFBVSxZQUFZLGNBQWMsQ0FBQyxDQUFBLENBQUM7WUFDNUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFBO1FBQy9CLENBQUM7UUFDRCxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQSxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFBO1FBQy9DLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQTtJQUNwQixDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsRUFBRSxDQUFBLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBLENBQUM7WUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQTtRQUNiLENBQUM7UUFDRCxNQUFNLENBQUMsS0FBSyxDQUFBO0lBQ2QsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFJO1FBQ1IsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFBO0lBQzdDLENBQUM7SUFDRCxLQUFLLENBQUMsUUFBUTtRQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQTtJQUNqRCxDQUFDO0lBRUQsS0FBSyxDQUFDLElBQUk7UUFDUixFQUFFLENBQUEsQ0FBQyxPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssUUFBUSxDQUFDLENBQUEsQ0FBQztZQUN0QyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQTtRQUN4QixDQUFDO1FBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0lBQ3BDLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBSTtRQUNSLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFBO1FBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ3hCLENBQUM7SUFFRCxLQUFLLENBQUMsV0FBVztRQUNmLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxVQUFVLFlBQVksV0FBVyxDQUFDLENBQUEsQ0FBQztZQUN6QyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQTtRQUN4QixDQUFDO1FBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO0lBQ3hDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbInR5cGUgQm9keVNvdXJjZSA9IEJsb2IgfCBCdWZmZXJTb3VyY2UgfCBcbiAgICAgICAgICAgICAgICAgIEZvcm1EYXRhIHwgVVJMU2VhcmNoUGFyYW1zIHwgXG4gICAgICAgICAgICAgICAgICBSZWFkYWJsZVN0cmVhbSB8IFN0cmluZ1xuXG5jbGFzcyBCb2R5TWl4aW4gaW1wbGVtZW50cyBCb2R5e1xuICBwcml2YXRlIHJlYWRvbmx5IGJvZHlTb3VyY2UgOiBCb2R5U291cmNlXG4gIHByaXZhdGUgc3RyZWFtIDogUmVhZGFibGVTdHJlYW0gfCBudWxsXG5cbiAgY29uc3RydWN0b3Iob2JqOiBCb2R5U291cmNlKXtcbiAgICB0aGlzLmJvZHlTb3VyY2UgPSBvYmpcbiAgICB0aGlzLnN0cmVhbSA9IG51bGxcbiAgfVxuXG4gIGdldCBib2R5KCk6IFJlYWRhYmxlU3RyZWFtIHwgbnVsbCB7XG4gICAgaWYodGhpcy5zdHJlYW0pe1xuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtXG4gICAgfVxuICAgIGlmKHRoaXMuYm9keVNvdXJjZSBpbnN0YW5jZW9mIFJlYWRhYmxlU3RyZWFtKXtcbiAgICAgIHRoaXMuc3RyZWFtID0gdGhpcy5ib2R5U291cmNlXG4gICAgfVxuICAgIGlmKCF0aGlzLnN0cmVhbSl7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTdHJlYW0gbm90IHlldCBpbXBsZW1lbnRlZFwiKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zdHJlYW1cbiAgfVxuXG4gIGdldCBib2R5VXNlZCgpOiBib29sZWFuIHtcbiAgICBpZih0aGlzLmJvZHkgJiYgdGhpcy5ib2R5LmxvY2tlZCl7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIGFzeW5jIGJsb2IoKTogUHJvbWlzZTxCbG9iPntcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJCbG9iIG5vdCB5ZXQgaW1wbGVtZW50ZWRcIilcbiAgfVxuICBhc3luYyBmb3JtRGF0YSgpOiBQcm9taXNlPEZvcm1EYXRhPntcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJGb3JtRGF0YSBub3QgeWV0IGltcGxlbWVudGVkXCIpXG4gIH1cblxuICBhc3luYyB0ZXh0KCk6IFByb21pc2U8c3RyaW5nPntcbiAgICBpZih0eXBlb2YgdGhpcy5ib2R5U291cmNlID09PSBcInN0cmluZ1wiKXtcbiAgICAgIHJldHVybiB0aGlzLmJvZHlTb3VyY2VcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwibm90IGltcGxlbWVudGVkXCIpXG4gIH1cblxuICBhc3luYyBqc29uKCk6IFByb21pc2U8YW55PntcbiAgICBjb25zdCByYXcgPSBhd2FpdCB0aGlzLnRleHQoKVxuICAgIHJldHVybiBKU09OLnBhcnNlKHJhdylcbiAgfVxuXG4gIGFzeW5jIGFycmF5QnVmZmVyKCk6IFByb21pc2U8QXJyYXlCdWZmZXI+e1xuICAgIGlmKHRoaXMuYm9keVNvdXJjZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKXtcbiAgICAgIHJldHVybiB0aGlzLmJvZHlTb3VyY2VcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwibm90IHlldCBpbXBsZW1lbnRlZFwiKVxuICB9XG59Il19